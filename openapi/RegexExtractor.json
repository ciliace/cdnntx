{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Regex Extractor",
    "description": "Accepts multipart/form-data with a binary file part named 'file'. Optional fields: mode, pattern, flags. Returns parsed lines, plus raw JSON strings (compact and pretty)."
  },
  "host": "nac-byc.azurewebsites.net",
  "basePath": "/",
  "schemes": ["https"],
  "consumes": ["multipart/form-data"],
  "produces": ["application/json"],
  "paths": {
    "/api/RegexExtractor": {
      "post": {
        "summary": "Extract from uploaded file",
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "Binary file part named 'file' (UTF-8 text content).",
            "required": true,
            "type": "file"
          },
          {
            "name": "mode",
            "in": "formData",
            "description": "Parsing mode. 'table' uses the built-in pattern; 'custom' uses your 'pattern' and 'flags'.",
            "required": false,
            "type": "string",
            "enum": ["table", "custom"],
            "default": "table"
          },
          {
            "name": "pattern",
            "in": "formData",
            "description": "Custom regex pattern (used only when mode=custom). Use named groups to shape output.",
            "required": false,
            "type": "string"
          },
          {
            "name": "flags",
            "in": "formData",
            "description": "Regex flags (normalized; 'g' always enforced). Example: gmu",
            "required": false,
            "type": "string",
            "default": "gmu"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful extraction",
            "schema": { "$ref": "#/definitions/ExtractionResponse" },
            "examples": {
              "application/json": {
                "filename": "BOM_4681934.txt",
                "line_count": 35,
                "order_lines": [
                  { "Order": "1", "Pos": "A1", "Type": "T", "Article": "ABC123", "Designation": "Widget", "UQ1": "PZ" }
                ],
                "meta": { "mode": "table", "used_flags": "gmu", "used_pattern": "^(?:...)$" },
                "raw_json_compact": "{\"filename\":\"BOM_4681934.txt\",\"line_count\":35,...}",
                "raw_json_pretty": "{\n  \"filename\": \"BOM_4681934.txt\",\n  \"line_count\": 35,\n  ...\n}"
              }
            }
          },
          "400": { "description": "Bad Request", "schema": { "$ref": "#/definitions/ErrorResponse" } },
          "415": { "description": "Unsupported Media Type" },
          "500": { "description": "Server Error", "schema": { "$ref": "#/definitions/ErrorResponse" } }
        }
      }
    },
    "/api/Order/Summary": {
      "post": {
        "summary": "Extract Order Summary from uploaded file",
        "operationId": "GetOrderSummary",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "Binary file part named 'file' (UTF-8 text content).",
            "required": true,
            "type": "file"
          },
          {
            "name": "mode",
            "in": "formData",
            "description": "Parsing mode. 'table' uses the built-in pattern; 'custom' uses 'pattern' and 'flags'.",
            "required": false,
            "type": "string",
            "enum": ["table", "custom"],
            "default": "table"
          },
          {
            "name": "pattern",
            "in": "formData",
            "description": "Custom regex pattern (used only when mode=custom).",
            "required": false,
            "type": "string"
          },
          {
            "name": "flags",
            "in": "formData",
            "description": "Regex flags (normalized; 'g' always enforced). Example: gmu",
            "required": false,
            "type": "string",
            "default": "gmu"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful extraction",
            "schema": { "$ref": "#/definitions/OrderSummaryResponse" },
            "examples": {
              "application/json": {
                "Filename": "BOM_4681934.txt",
                "Order": "4681934",
                "Date": "2024-06-26",
                "OrderLineCount": 35
              }
            }
          },
          "400": { "description": "Bad Request", "schema": { "$ref": "#/definitions/ErrorResponse" } },
          "415": { "description": "Unsupported Media Type" },
          "500": { "description": "Server Error", "schema": { "$ref": "#/definitions/ErrorResponse" } }
        }
      }
    },
    "/api/Order/Lines": {
      "post": {
        "summary": "Extract Order Lines from uploaded file",
        "operationId": "GetOrderLines",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "Binary file part named 'file' (UTF-8 text content).",
            "required": true,
            "type": "file"
          },
          {
            "name": "mode",
            "in": "formData",
            "description": "Parsing mode. 'table' uses the built-in pattern; 'custom' uses 'pattern' and 'flags'.",
            "required": false,
            "type": "string",
            "enum": ["table", "custom"],
            "default": "table"
          },
          {
            "name": "pattern",
            "in": "formData",
            "description": "Custom regex pattern (used only when mode=custom).",
            "required": false,
            "type": "string"
          },
          {
            "name": "flags",
            "in": "formData",
            "description": "Regex flags (normalized; 'g' always enforced). Example: gmu",
            "required": false,
            "type": "string",
            "default": "gmu"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful extraction",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/OrderLine" }
            },
            "examples": {
              "application/json": [
                {
                  "Order": "4681934",
                  "Pos": "0001",
                  "Type": "T",
                  "Article": "",
                  "Lot": "",
                  "Designation": "Mettre date d'EXP sur la packing list",
                  "UQ1": "PZ",
                  "QteNec": "1",
                  "QtePrelev": "0",
                  "Origine": "40021671",
                  "DateBes": "2024-06-26",
                  "Activite": "0010",
                  "Poste": "23",
                  "Div": "PL70",
                  "ES": "",
                  "Statut": "IMPR LANC",
                  "DescrPosteTrav": "1Bottles (Emul/vacuum Fill) - B",
                  "DesOp": "Filling",
                  "Empl": "",
                  "GAc": "",
                  "GrpeMar": "",
                  "Nomenclat": "00490033",
                  "PosTr": "W7FIL-B",
                  "NoRes": "41491135",
                  "TP": "",
                  "Res_DA": "3",
                  "TyBes": "AR",
                  "TyMag": "",
                  "CategNcl": "M",
                  "UQ2": "PZ"
                }
              ]
            }
          },
          "400": { "description": "Bad Request", "schema": { "$ref": "#/definitions/ErrorResponse" } },
          "415": { "description": "Unsupported Media Type" },
          "500": { "description": "Server Error", "schema": { "$ref": "#/definitions/ErrorResponse" } }
        }
      }
    }
  },
  "definitions": {
    "OrderSummaryResponse": {
      "type": "object",
      "required": ["Filename", "Order", "OrderLineCount"],
      "properties": {
        "Filename": { "type": "string" },
        "Order": { "type": "string", "description": "Best-guess order id (from lines or filename)" },
        "Date": { "type": "string", "format": "date", "description": "ISO 8601 date e.g. 2024-06-26" },
        "OrderLineCount": { "type": "integer", "format": "int32" }
      }
    },
    "ExtractionResponse": {
      "type": "object",
      "required": ["line_count", "order_lines", "meta"],
      "properties": {
        "filename": { "type": "string" },
        "order": {
            "type": ["string", "null"],
            "description": "Single order number when uniquely determined from content or filename; otherwise null."
        },
        "orders_all": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Unique list of all Order values found in the parsed lines."
        },
        "line_count": { "type": "integer", "format": "int32" },
        "order_lines": {
          "type": "array",
          "items": { "$ref": "#/definitions/OrderLine" }
        },
        "meta": {
          "type": "object",
          "required": ["mode", "used_flags", "used_pattern"],
          "properties": {
            "mode": { "type": "string" },
            "used_flags": { "type": "string" },
            "used_pattern": { "type": "string" }
          }
        },
        "raw_json_compact": {
          "type": "string",
          "description": "Entire successful response serialized as a single-line JSON string."
        },
        "raw_json_pretty": {
          "type": "string",
          "description": "Entire successful response serialized as pretty-printed JSON."
        }
      }
    },
    "OrderLine": {
      "type": "object",
      "required": ["Order", "Pos", "Type"],
      "properties": {
        "Order": { "type": "string" },
        "Pos": { "type": "string" },
        "Type": { "type": "string" },
        "Article": { "type": "string" },
        "Lot": { "type": "string" },
        "Designation": { "type": "string" },
        "UQ1": { "type": "string" },
        "QteNec": { "type": "string", "description": "Invariant decimal string, e.g., 1873.136" },
        "QtePrelev": { "type": "string", "description": "Invariant decimal string" },
        "Origine": { "type": "string" },
        "DateBes": { "type": "string", "format": "date", "description": "ISO 8601 date, e.g., 2024-06-26" },
        "Activite": { "type": "string" },
        "Poste": { "type": "string" },
        "Div": { "type": "string" },
        "ES": { "type": "string" },
        "Statut": { "type": "string" },
        "DescrPosteTrav": { "type": "string" },
        "DesOp": { "type": "string" },
        "Empl": { "type": "string" },
        "GAc": { "type": "string" },
        "GrpeMar": { "type": "string" },
        "Nomenclat": { "type": "string" },
        "PosTr": { "type": "string" },
        "NoRes": { "type": "string" },
        "TP": { "type": "string" },
        "Res_DA": { "type": "string" },
        "TyBes": { "type": "string" },
        "TyMag": { "type": "string" },
        "CategNcl": { "type": "string" },
        "UQ2": { "type": "string" }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "required": ["error"],
      "properties": {
        "error": { "type": "string" },
        "raw_json_compact": {
          "type": "string",
          "description": "Entire error payload serialized as a single-line JSON string."
        },
        "raw_json_pretty": {
          "type": "string",
          "description": "Entire error payload serialized as pretty-printed JSON."
        }
      }
    }
  }
}
